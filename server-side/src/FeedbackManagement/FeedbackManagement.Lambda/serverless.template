{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Transform" : "AWS::Serverless-2016-10-31",
  "Description" : "Starting template for an AWS Serverless Application.",
  "Parameters" : {
  },
  "Resources" : {
	"FeedbackStore": {
        "Type": "AWS::DynamoDB::Table",
        "Properties": {
          "TableName": "Feedback",
          "AttributeDefinitions": [
            {
              "AttributeName": "Id",
              "AttributeType": "S"
            }
          ],
          "KeySchema": [
            { "AttributeName": "Id", "KeyType": "HASH" }
          ],
          "ProvisionedThroughput": {
            "ReadCapacityUnits": 1,
            "WriteCapacityUnits": 1
          }
        }
      },
    "FbRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": "FbRole",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          ],
          "Policies": [
            {
              "PolicyName": "DynamoDBAccessPolicyFeedback",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:GetItem",
                      "dynamodb:Query",
                      "dynamodb:Scan",
                      "dynamodb:DescribeTable",
                      "dynamodb:UpdateItem"
                    ],
                    "Resource": {
                      "Fn::GetAtt": [
                        "FeedbackStore",
                        "Arn"
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      },

    "FeedbackServiceResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::ImportValue": "FreelancerRestApiRootResourceId"
        },
        "PathPart": "feedback-service",
        "RestApiId": {
          "Fn::ImportValue": "FreelancerRestApiId"
        }
      }
    },
    "FinishedContractResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "FeedbackServiceResource"
        },
        "PathPart": "finished-contract",
        "RestApiId": {
          "Fn::ImportValue": "FreelancerRestApiId"
        }
      }
    },
    "FinishedContractByIdResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "FinishedContractResource"
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Fn::ImportValue": "FreelancerRestApiId"
        }
      }
    },
    "FinishedContractByIdFeedbackResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Ref": "FinishedContractByIdResource"
        },
        "PathPart": "feedback",
        "RestApiId": {
          "Fn::ImportValue": "FreelancerRestApiId"
        }
      }
    },

    "ContractFinishedRule": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Name": "ContractFinishedRule",
        "EventBusName": {
          "Fn::ImportValue": "FPEventBusArn"
        },
        "EventPattern": {
          "source": [
            "job-service"
          ],
          "detail-type": [
            "ContractFinishedIntegrationEvent"
          ]
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "ContractFinishedHandler",
                "Arn"
              ]
            },
            "Id": "ContractFinishedTarget"
          }
        ]
      }
    },
    "PermissionContractFinished": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "ContractFinishedHandler"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "ContractFinishedRule",
            "Arn"
          ]
        }
      }
    },
    "ContractFinishedHandler" : {
      "Type" : "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "fb-ContractFinished",
        "Handler": "FeedbackManagement.Lambda::FeedbackManagement.Lambda.Handlers.ContractFinishedHandler::FunctionHandler",
        "Runtime": "dotnet8",
        "CodeUri": "",
        "Description": "Default function",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
            "Fn::GetAtt": [ "FbRole", "Arn" ]
        },
        "Policies": [ "AWSLambda_FullAccess" ],
        "Layers": [
            "arn:aws:lambda:eu-central-1:891376935045:layer:CommonLayer:3"
        ]
      }
    },

    "GetById": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "fb-queries-GetById",
        "Handler": "FeedbackManagement.Lambda::FeedbackManagement.Lambda.Handlers.GetByIdHandler::FunctionHandler",
        "Runtime": "dotnet8",
        "CodeUri": "",
        "Description": "Default function",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [ "FbRole", "Arn" ]
        },
        "Policies": [
          "AWSLambda_FullAccess"
        ],
        "Layers": [
          "arn:aws:lambda:eu-central-1:891376935045:layer:CommonLayer:3"
        ]
      }
    },
    "GetByIdMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Fn::ImportValue": "CognitoAuthorizerId"
        },
        "AuthorizationScopes": [ "FRS/rw" ],
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "FinishedContractByIdResource"
        },
        "RestApiId": {
          "Fn::ImportValue": "FreelancerRestApiId"
        },
        "RequestParameters": {
          "method.request.path.id": true
        },
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetById.Arn}/invocations"
          },
          "RequestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "GetByIdLambdaApiGatewayInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetById"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/GET/feedback-service/finished-contract/{id}",
            {
              "ApiId": {
                "Fn::ImportValue": "FreelancerRestApiId"
              }
            }
          ]
        }
      }
    },

    "CreateFeedback": {
      "Type": "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "fb-commands-CreateFeedback",
        "Handler": "FeedbackManagement.Lambda::FeedbackManagement.Lambda.Handlers.CreateFeedbackHandler::FunctionHandler",
        "Runtime": "dotnet8",
        "CodeUri": "",
        "Description": "Default function",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": {
          "Fn::GetAtt": [ "FbRole", "Arn" ]
        },
        "Policies": [
          "AWSLambda_FullAccess"
        ],
        "Layers": [
          "arn:aws:lambda:eu-central-1:891376935045:layer:CommonLayer:3"
        ]
      }
    },
    "CreateFeedbackMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Fn::ImportValue": "CognitoAuthorizerId"
        },
        "AuthorizationScopes": [ "FRS/rw" ],
        "HttpMethod": "POST",
        "ResourceId": {
          "Ref": "FinishedContractByIdFeedbackResource"
        },
        "RestApiId": {
          "Fn::ImportValue": "FreelancerRestApiId"
        },
        "RequestParameters": {
          "method.request.path.id": true
        },
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CreateFeedback.Arn}/invocations"
          },
          "RequestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
    "CreateFeedbackLambdaApiGatewayInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "CreateFeedback"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/POST/feedback-service/finished-contract/{id}/feedback",
            {
              "ApiId": {
                "Fn::ImportValue": "FreelancerRestApiId"
              }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "FeedbackStore": {
          "Value": {
            "Fn::GetAtt": [
              "FeedbackStore",
              "Arn"
          ] 
          },
          "Export": {
            "Name": "FeedbackStore"
          }
        }
  }
}