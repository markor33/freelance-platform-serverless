{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Transform" : "AWS::Serverless-2016-10-31",
  "Description" : "Starting template for an AWS Serverless Application.",
  "Parameters" : {
  },
  "Resources" : {
	  "AggregatorServiceResource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "ParentId": {
            "Fn::ImportValue": "FreelancerRestApiRootResourceId"
          },
          "PathPart": "aggregator-service",
          "RestApiId": {
            "Fn::ImportValue": "FreelancerRestApiId"
          }
        }
      },
      "JobResource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "ParentId": {
            "Ref": "AggregatorServiceResource"
          },
          "PathPart": "job",
          "RestApiId": {
            "Fn::ImportValue": "FreelancerRestApiId"
          }
        }
      },
      "JobByIdResource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "ParentId": {
            "Ref": "JobResource"
          },
          "PathPart": "{id}",
          "RestApiId": {
            "Fn::ImportValue": "FreelancerRestApiId"
          }
        }
      },
      "ProposalResource": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "ParentId": {
            "Ref": "JobByIdResource"
          },
          "PathPart": "proposal",
          "RestApiId": {
            "Fn::ImportValue": "FreelancerRestApiId"
          }
        }
      },

      "AggregatorLambdaRole": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "RoleName": "AggregatorLambdaRole",
          "AssumeRolePolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                },
                "Action": "sts:AssumeRole"
              }
            ]
          },
          "ManagedPolicyArns": [
            "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
          ],
          "Policies": [
            {
              "PolicyName": "DynamoDBAccessPolicyFreelancer",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:GetItem",
                      "dynamodb:Query",
                      "dynamodb:Scan",
                      "dynamodb:DescribeTable",
                      "dynamodb:BatchGetItem"
                    ],
                    "Resource": {
                      "Fn::ImportValue": "FPReadModelStoreArn"
                    }
                  }
                ]
              }
            },
            {
              "PolicyName": "DynamoDBAccessPolicyJob",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:GetItem",
                      "dynamodb:Query",
                      "dynamodb:Scan",
                      "dynamodb:DescribeTable"
                    ],
                    "Resource": {
                      "Fn::ImportValue": "JobReadModelStoreArn"
                    }
                  }
                ]
              }
            },
            {
              "PolicyName": "DynamoDBAccessPolicyProposal",
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Action": [
                      "dynamodb:GetItem",
                      "dynamodb:Query",
                      "dynamodb:Scan",
                      "dynamodb:DescribeTable"
                    ],
                    "Resource": {
                      "Fn::ImportValue": "ProposalReadModelStoreArn"
                    }
                  }
                ]
              }
            }
          ]
        }
      },

      "GetProposalsByJob" : {
      "Type" : "AWS::Serverless::Function",
      "Properties": {
        "FunctionName": "aggregator-GetProposalsByJob",
        "Handler": "ApiGateway.Aggregator.Lambda::ApiGateway.Aggregator.Lambda.Handlers.GetJobProposalsHandler::FunctionHandler",
        "Runtime": "dotnet8",
        "CodeUri": "",
        "Description": "Default function",
        "MemorySize": 256,
        "Timeout": 30,
        "Role": { "Fn::GetAtt": ["AggregatorLambdaRole", "Arn"] },
        "Policies": [ "AWSLambda_FullAccess" ],
        "Layers": [
          "arn:aws:lambda:eu-central-1:891376935045:layer:CommonLayer:11"
        ]
      }
    },
      "GetProposalsByJobMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "AuthorizationType": "COGNITO_USER_POOLS",
        "AuthorizerId": {
          "Fn::ImportValue": "CognitoAuthorizerId"
        },
        "AuthorizationScopes": [ "FRS/rw" ],
        "HttpMethod": "GET",
        "ResourceId": {
            "Ref": "ProposalResource"
        },
        "RestApiId": {
          "Fn::ImportValue": "FreelancerRestApiId"
        },
        "RequestParameters": {
          "method.request.path.id": true
        },
        "Integration": {
          "Type": "AWS_PROXY",
          "IntegrationHttpMethod": "POST",
          "Uri": {
            "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetProposalsByJob.Arn}/invocations"
          },
          "RequestParameters": {
            "integration.request.path.id": "method.request.path.id"
          }
        }
      }
    },
      "GetFreelancerByIdLambdaApiGatewayInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Ref": "GetProposalsByJob"
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiId}/*/GET/aggregator-service/job/{id}/proposal",
            {
              "ApiId": {
                "Fn::ImportValue": "FreelancerRestApiId"
              }
            }
          ]
        }
      }
    }
  }
}