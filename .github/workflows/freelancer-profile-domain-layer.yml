name: common-layer

on:
    push:
        branches:
            - main
        paths:
            - server-side/src/FreelancerProfile/FreelancerProfile.Domain/**
            - .github/workflows/freelancer-profile-domain-layer.yml

jobs:
    build-test-deploy:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: aws-actions/setup-sam@v1
            - uses: aws-actions/configure-aws-credentials@v2
              with:
               aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID  }}
               aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
               aws-region: eu-central-1

            - name: Install AWS Lambda .NET Core CLI tool
              run: dotnet tool install -g Amazon.Lambda.Tools --framework netcoreapp3.1

            - name: Build and test
              run: |
                cd server-side
                dotnet restore "FreelancePlatform.sln"
                cd src/FreelancerProfile/FreelancerProfile.IntegrationTests
                dotnet build --no-restore
                dotnet test --no-build -v=normal

            - name: Build and deploy
              run: |
                cd server-side
                dotnet restore "FreelancePlatform.sln"
                cd src/FreelancerProfile/FreelancerProfile.Domain
                dotnet build --no-restore
                dotnet lambda publish-layer FreelancerProfileDomain --layer-type runtime-package-store --framework net8.0 --s3-bucket freelancer-profile-service1

            - name: Lambda Functions Layer version update
              run: |
                LAYER_ARN="arn:aws:lambda:eu-central-1:891376935045:layer:FreelancerProfileDomain"
                LATEST_VERSION=$(aws lambda list-layer-versions --layer-name FreelancerProfileDomain --query "LayerVersions[0].Version" --output text)
                if [ "$(aws lambda list-layer-versions --layer-name FreelancerProfileDomain --query "length(LayerVersions)")" -gt 1 ]; then
                  PREVIOUS_VERSION=$(aws lambda list-layer-versions --layer-name FreelancerProfileDomain --query "LayerVersions[1].Version" --output text)
                else
                  PREVIOUS_VERSION=$LATEST_VERSION
                fi
                for function_name in $(aws lambda list-functions --query "Functions[?Layers[?Arn=='$LAYER_ARN:$PREVIOUS_VERSION']].FunctionName" --output text); do
                    echo "Updating function $function_name to use version $PREVIOUS_VERSION of layer $LAYER_ARN"
                    aws lambda update-function-configuration --function-name $function_name --layers $LAYER_ARN:$LATEST_VERSION
                done
                